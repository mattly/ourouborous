# Ouroubourus

by Matthew Lyon <matt@flowerpowered.com>

## Description

Ouroubourus is a re-thinking of a MIDI sequencer system I built in Max/MSP several years ago and never got around to finishing.

## Features

Ouroubourus is made up of several components:

- The Scheduler:  
  This is currently a remote timer using Kernel#sleep. In the future it will also be able to subscribe to a network scheduler to syncronize multiple processes/computers to the same timer. It uses a time-independent "tick" system which works out to 480 pulses per quarter note at a given tempo, so you can specify durations in musical terms, not fractional seconds.
  
- Scheduler Subscribers:  
  Mixin `Ouroubourus::Schedulable` and your class will have its own event queue (`Ouroubourus::Schedule`) that can be driven by a scheduler when added to that scheduler's subscriptions.

- Sequencers:
  A base library of classes to use as a starting point. At this point there is only a simplistic Metronome.

- Effects:
  None yet. Modify your midi in real-time.

- Devices:
  None yet. A library for specifying specific behaviors with certain devices, like midi knob boxes or a monome.
  
# Synopsis

See the metronome example in `examples/metronome.rb`

## Requirements

- The example provided requires Ben Bleything's [Midiator](http://rubyforge.org/projects/midiator)
- Network Time Syncing/Serving will require my own [Datagrammer](http://github.com/mattly/datagrammer)

## License

Copyright (c) 2008 Matt Lyon

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.